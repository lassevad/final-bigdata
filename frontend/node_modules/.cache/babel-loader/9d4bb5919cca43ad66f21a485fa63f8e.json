{"ast":null,"code":"var _jsxFileName = \"/Users/lassevad/Desktop/utveksling/Fag/finals/bigdata-service/frontend/src/Graph.js\";\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Box from '@material-ui/core/Box';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROUTE = \"http://localhost:5000\";\n\nclass GraphService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      csvfile: null,\n      strategies: null,\n      strategyItems: null,\n      selectedStrategy: null,\n      colItems: null,\n      selectedCol1Item: null,\n      selectedCol2Item: null,\n      selectedHueItem: null,\n      disp_image: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.getStrategies = this.getStrategies.bind(this);\n    this.setStrategy = this.setStrategy.bind(this);\n    this.fillStrategies = this.fillStrategies.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.getColumns = this.getColumns.bind(this);\n    this.sendGraphInfo = this.sendGraphInfo.bind(this);\n    this.setCol1 = this.setCol1.bind(this);\n    this.setCol2 = this.setCol2.bind(this);\n    this.setHue = this.setHue.bind(this);\n    this.changeDispImage = this.changeDispImage.bind(this);\n    this.generateGraph = this.generateGraph.bind(this);\n  }\n\n  makeId(length) {\n    var result = [];\n    var characters = '0123456789';\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result.push(characters.charAt(Math.floor(Math.random() * charactersLength)));\n    }\n\n    return result.join('');\n  }\n\n  changeDispImage(newImage) {\n    this.setState({\n      disp_image: newImage\n    });\n  }\n\n  uploadcsv() {\n    console.log(this.state.csvfile);\n    let csv = this.state.csvfile;\n    return axios.post(API_ROUTE + \"/csv\", csv, {\n      headers: {\n        \"Content-Type\": \"text/csv\"\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  uploadStrategy() {\n    return axios.post(API_ROUTE + '/uploadStrategy', {\n      data: {\n        strategy: this.state.selectedStrategy\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  uploadCol1() {\n    return axios.post(API_ROUTE + '/uploadCol1', {\n      data: {\n        col1: this.state.selectedCol1Item\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  uploadCol2() {\n    return axios.post(API_ROUTE + '/uploadCol2', {\n      data: {\n        col2: this.state.selectedCol2Item\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  uploadHue() {\n    return axios.post(API_ROUTE + '/uploadHue', {\n      data: {\n        hue: this.state.selectedHueItem\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  getStrategies() {\n    return axios.get(API_ROUTE + \"/strategies\").then(response => {\n      console.log(typeof response.data.strategies);\n      console.log(response.data.str);\n      this.setState({\n        strategies: response.data.strategies\n      });\n    });\n  }\n\n  getColumns() {\n    return axios.get(API_ROUTE + \"/columns\").then(response => {\n      console.log(response.data);\n      this.fillColumns(response.data);\n    });\n  }\n\n  setStrategy(e) {\n    console.log(e.target);\n    this.setState({\n      selectedStrategy: e.target.value\n    });\n  }\n\n  setCol1(e) {\n    this.setState({\n      selectedCol1Item: e.target.value\n    });\n  }\n\n  setCol2(e) {\n    this.setState({\n      selectedCol2Item: e.target.value\n    });\n  }\n\n  setHue(e) {\n    this.setState({\n      selectedHueItem: e.target.value\n    });\n  }\n\n  async sendGraphInfo() {\n    await this.uploadStrategy();\n    await this.uploadCol1();\n    await this.uploadCol2();\n    await this.uploadHue();\n    this.generateGraph();\n  }\n\n  generateGraph() {\n    return axios.get(API_ROUTE + \"/generateGraph\", {\n      responseType: 'arraybuffer'\n    }).then(response => {\n      console.log(response);\n      var blob = new Blob([response.data], {\n        type: response.headers['content-type']\n      });\n      var image = URL.createObjectURL(blob);\n      console.log(image);\n      this.changeDispImage(image);\n      console.log(this.state.disp_image);\n      return image;\n    });\n  }\n\n  fillStrategies() {\n    let strats = this.state.strategies;\n    let menuItems = strats.map(strategy => /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: strategy.id,\n      children: strategy.name\n    }, strategy.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this));\n    this.setState({\n      strategyItems: menuItems\n    });\n  }\n\n  fillColumns(columns) {\n    console.log(columns);\n    let menuItems = columns.map((index, value) => /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: value,\n      children: index\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this));\n    this.setState({\n      columns: menuItems\n    });\n    console.log(this.state.columns);\n  }\n\n  async handleChange(event) {\n    await this.setState({\n      csvfile: event.target.files[0],\n      disp_image: URL.createObjectURL(event.target.files[0])\n    });\n    await this.uploadcsv();\n    this.getColumns();\n  }\n\n  async componentDidMount() {\n    await this.getStrategies();\n    this.fillStrategies();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Plot strategy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        onChange: this.setStrategy,\n        children: this.state.strategyItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Column 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        onChange: this.setCol1,\n        children: this.state.columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Column 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        onChange: this.setCol2,\n        children: this.state.columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Hue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        onChange: this.setHue,\n        children: this.state.columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"file-field input-field\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignSelf: \"flex-end\",\n          justifyContent: \"center\",\n          className: \"upl\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"btn\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            class: \"btn\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"waves-effect waves-light btn\",\n            onClick: this.sendGraphInfo,\n            children: \"Create Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.disp_image,\n            onChange: this.changeDispImage,\n            id: \"graph-upload\",\n            className: \"ImageSize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GraphService;","map":{"version":3,"sources":["/Users/lassevad/Desktop/utveksling/Fag/finals/bigdata-service/frontend/src/Graph.js"],"names":["React","Select","InputLabel","MenuItem","Box","axios","API_ROUTE","GraphService","Component","constructor","props","state","csvfile","strategies","strategyItems","selectedStrategy","colItems","selectedCol1Item","selectedCol2Item","selectedHueItem","disp_image","handleChange","bind","getStrategies","setStrategy","fillStrategies","componentDidMount","getColumns","sendGraphInfo","setCol1","setCol2","setHue","changeDispImage","generateGraph","makeId","length","result","characters","charactersLength","i","push","charAt","Math","floor","random","join","newImage","setState","uploadcsv","console","log","csv","post","headers","then","response","catch","error","uploadStrategy","data","strategy","uploadCol1","col1","uploadCol2","col2","uploadHue","hue","get","str","fillColumns","e","target","value","responseType","blob","Blob","type","image","URL","createObjectURL","strats","menuItems","map","id","name","columns","index","event","files","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Box from '@material-ui/core/Box';\nimport axios from 'axios';\n\nconst API_ROUTE = \"http://localhost:5000\"\n\nclass GraphService extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            csvfile: null,\n            strategies: null,\n            strategyItems: null,\n            selectedStrategy: null,\n            colItems: null,\n            selectedCol1Item: null,\n            selectedCol2Item: null,\n            selectedHueItem: null,\n            disp_image: null\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.getStrategies = this.getStrategies.bind(this)\n        this.setStrategy = this.setStrategy.bind(this)\n        this.fillStrategies = this.fillStrategies.bind(this)\n        this.componentDidMount = this.componentDidMount.bind(this)\n        this.getColumns = this.getColumns.bind(this)\n        this.sendGraphInfo = this.sendGraphInfo.bind(this)\n        this.setCol1 = this.setCol1.bind(this)\n        this.setCol2 = this.setCol2.bind(this)\n        this.setHue = this.setHue.bind(this)\n        this.changeDispImage = this.changeDispImage.bind(this)\n        this.generateGraph = this.generateGraph.bind(this)\n\n    }\n\n    makeId(length) {\n        var result = [];\n        var characters = '0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result.push(characters.charAt(Math.floor(Math.random() * charactersLength)));\n        }\n        return result.join('');\n    }\n\n    changeDispImage(newImage) {\n        this.setState({\n            disp_image: newImage\n        });\n    }\n\n    uploadcsv() {\n        console.log(this.state.csvfile)\n        let csv = this.state.csvfile\n        return axios.post(API_ROUTE + \"/csv\", csv, {\n            headers: {\n                \"Content-Type\": \"text/csv\",\n            }\n        }).then(function (response) {\n            console.log(response);\n        })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    uploadStrategy() {\n        return axios.post(API_ROUTE + '/uploadStrategy', {\n            data: {\n                strategy: this.state.selectedStrategy\n            },\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    uploadCol1() {\n        return axios.post(API_ROUTE + '/uploadCol1', {\n            data: {\n                col1: this.state.selectedCol1Item\n            },\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    uploadCol2() {\n        return axios.post(API_ROUTE + '/uploadCol2', {\n            data: {\n                col2: this.state.selectedCol2Item\n            },\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    uploadHue() {\n        return axios.post(API_ROUTE + '/uploadHue', {\n            data: {\n                hue: this.state.selectedHueItem\n            },\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    getStrategies() {\n        return axios.get(API_ROUTE + \"/strategies\")\n            .then(response => {\n                console.log(typeof response.data.strategies)\n                console.log(response.data.str)\n                this.setState({\n                    strategies: response.data.strategies\n                })\n            })\n    }\n\n    getColumns() {\n        return axios.get(API_ROUTE + \"/columns\")\n            .then(response => {\n                console.log(response.data)\n                this.fillColumns(response.data)\n            })\n    }\n\n    setStrategy(e) {\n        console.log(e.target)\n        this.setState({\n            selectedStrategy: e.target.value\n        })\n    }\n\n    setCol1(e) {\n        this.setState({\n            selectedCol1Item: e.target.value\n        })\n    }\n\n    setCol2(e) {\n        this.setState({\n            selectedCol2Item: e.target.value\n        })\n    }\n\n    setHue(e) {\n        this.setState({\n            selectedHueItem: e.target.value\n        })\n    }\n\n    async sendGraphInfo() {\n        await this.uploadStrategy()\n        await this.uploadCol1()\n        await this.uploadCol2()\n        await this.uploadHue()\n        this.generateGraph()\n    }\n\n    generateGraph() {\n        return axios.get(API_ROUTE + \"/generateGraph\", { responseType: 'arraybuffer' })\n            .then(response => {\n                console.log(response)\n                var blob = new Blob(\n                    [response.data],\n                    { type: response.headers['content-type'] }\n                )\n\n                var image = URL.createObjectURL(blob)\n                console.log(image)\n\n                this.changeDispImage(image)\n                console.log(this.state.disp_image)\n                return image\n            });\n    }\n    fillStrategies() {\n        let strats = this.state.strategies;\n        let menuItems = strats.map((strategy) =>\n            <MenuItem value={strategy.id} key={strategy.name}>{strategy.name}</MenuItem>\n        );\n        this.setState({\n            strategyItems: menuItems\n        })\n    }\n\n    fillColumns(columns) {\n        console.log(columns)\n        let menuItems = columns.map((index, value) => (\n            <MenuItem key={index} value={value}>{index}</MenuItem>\n        ));\n        this.setState({\n            columns: menuItems\n        })\n        console.log(this.state.columns)\n    }\n\n    async handleChange(event) {\n        await this.setState({\n            csvfile: event.target.files[0],\n            disp_image: URL.createObjectURL(event.target.files[0])\n        })\n        await this.uploadcsv()\n        this.getColumns()\n    }\n\n    async componentDidMount() {\n        await this.getStrategies()\n        this.fillStrategies()\n\n    }\n\n    render() {\n        return (\n            <div>\n                <InputLabel>Plot strategy</InputLabel>\n                <Select\n                    onChange={this.setStrategy}>\n                    {this.state.strategyItems}\n                </Select>\n                <InputLabel>Column 1</InputLabel>\n                <Select\n                    onChange={this.setCol1}>\n                    {this.state.columns}\n                </Select>\n                <InputLabel>Column 2</InputLabel>\n                <Select\n                    onChange={this.setCol2}>\n                    {this.state.columns}\n                </Select>\n                <InputLabel>Hue</InputLabel>\n                <Select\n                    onChange={this.setHue}>\n                    {this.state.columns}\n                </Select>\n                <div class=\"file-field input-field\">\n                    <Box display=\"flex\" alignSelf=\"flex-end\" justifyContent=\"center\" className=\"upl\">\n                        <span class=\"btn\">Upload</span>\n                        <input type=\"file\" multiple class=\"btn\" onChange={this.handleChange} />\n                        <a class=\"waves-effect waves-light btn\" onClick={this.sendGraphInfo}>Create Graph</a>\n                    </Box>\n                    <Box display=\"flex\" justifyContent=\"center\">\n                        <img src={this.state.disp_image} onChange={this.changeDispImage} id=\"graph-upload\" className=\"ImageSize\" />\n                    </Box>\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\nexport default GraphService;"]},"metadata":{},"sourceType":"module"}