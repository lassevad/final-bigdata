{"ast":null,"code":"var _jsxFileName = \"/Users/lassevad/Desktop/utveksling/Fag/finals/bigdata-service/frontend/src/Unsupervised.js\";\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROUTE = \"http://localhost:5000\";\n\nclass KmeansService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disp_image: null,\n      kInput: null,\n      supColumns: null,\n      supColItems: null,\n      selectedXCol: null,\n      selectedYCol: null,\n      predInput: null,\n      predOutput: null\n    };\n    this.setK = this.setK.bind(this);\n    this.setPred = this.setPred.bind(this);\n    this.setXColumn = this.setXColumn.bind(this);\n    this.setYColumn = this.setYColumn.bind(this);\n    this.getSupColumns = this.getSupColumns.bind(this);\n    this.fillSupColumns = this.fillSupColumns.bind(this);\n    this.generateGraph = this.generateGraph.bind(this);\n    this.changeDispImage = this.changeDispImage.bind(this);\n    this.sendKmeansInfo = this.sendKmeansInfo.bind(this);\n    this.getPred = this.getPred.bind(this);\n  }\n\n  setK(e) {\n    this.setState({\n      kInput: e.target.value\n    });\n    console.log(this.state.kInput);\n  }\n\n  setPred(e) {\n    this.setState({\n      predInput: e.target.value\n    });\n    console.log(this.state.predInput);\n  }\n\n  setXColumn(e) {\n    console.log(e.target.value);\n    this.setState({\n      selectedXCol: e.target.value\n    });\n  }\n\n  setYColumn(e) {\n    console.log(e.target.value);\n    this.setState({\n      selectedYCol: e.target.value\n    });\n  }\n\n  getSupColumns() {\n    return axios.get(API_ROUTE + \"/supcolumns\").then(response => {\n      console.log(response.data);\n      this.setState({\n        supColumns: response.data\n      });\n    });\n  }\n\n  getPred() {\n    return axios.get(API_ROUTE + \"/pred\").then(response => {\n      console.log(response.data);\n      this.setState({\n        predOutput: response.data\n      });\n    });\n  }\n\n  fillSupColumns() {\n    let cols = this.state.supColumns;\n    let menuItems = cols.map((index, value) => /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: value,\n      children: index\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this));\n    this.setState({\n      supColItems: menuItems\n    });\n  }\n\n  generateGraph() {\n    return axios.get(API_ROUTE + \"/generateKmeansGraph\", {\n      responseType: 'arraybuffer'\n    }).then(response => {\n      console.log(response);\n      var blob = new Blob([response.data], {\n        type: response.headers['content-type']\n      });\n      var image = URL.createObjectURL(blob);\n      console.log(image);\n      this.changeDispImage(image);\n      console.log(this.state.disp_image);\n      return image;\n    });\n  }\n\n  changeDispImage(newImage) {\n    this.setState({\n      disp_image: newImage\n    });\n  }\n\n  uploadXCol() {\n    return axios.post(API_ROUTE + '/uploadXCol', {\n      data: {\n        X: this.state.selectedXCol\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  uploadYCol() {\n    return axios.post(API_ROUTE + '/uploadYCol', {\n      data: {\n        Y: this.state.selectedYCol\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  uploadK() {\n    return axios.post(API_ROUTE + '/uploadK', {\n      data: {\n        K: this.state.kInput\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  uploadPred() {\n    return axios.post(API_ROUTE + '/uploadPred', {\n      data: {\n        pred: this.state.predInput\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  async sendKmeansInfo() {\n    await this.uploadXCol();\n    await this.uploadYCol();\n    await this.uploadK();\n    await this.generateGraph();\n  }\n\n  sendPredInfo() {\n    this.uploadPred();\n  }\n\n  async componentDidMount() {\n    await this.getSupColumns();\n    await this.fillSupColumns();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"graph\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Do unsupervised ML (Kmeans)!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"X Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        onChange: this.setXColumn,\n        children: this.state.supColItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Y Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        onChange: this.setYColumn,\n        children: this.state.supColItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"K: Number of clusters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        value: this.state.kInput,\n        onChange: this.setK,\n        className: \"k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"file-field input-field\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignSelf: \"flex-end\",\n          justifyContent: \"center\",\n          className: \"upl\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"waves-effect waves-light btn\",\n            onClick: this.sendKmeansInfo,\n            children: \"Do K-means\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.disp_image,\n            onChange: this.changeDispImage,\n            id: \"graph-upload\",\n            className: \"ImageSize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Which cluster are you in?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        children: [\"Input your own \", this.state.selectedXCol, \" and \", this.state.selectedYCol, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        value: this.state.predInput,\n        onChange: this.setPred,\n        className: \"k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignSelf: \"flex-end\",\n        justifyContent: \"center\",\n        className: \"upl\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"waves-effect waves-light btn\",\n          onClick: this.sendPredInfo,\n          children: \"Predict cluster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"You are in cluster: \", this.state.predOutput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default KmeansService;","map":{"version":3,"sources":["/Users/lassevad/Desktop/utveksling/Fag/finals/bigdata-service/frontend/src/Unsupervised.js"],"names":["React","Select","InputLabel","MenuItem","Box","TextField","axios","API_ROUTE","KmeansService","Component","constructor","props","state","disp_image","kInput","supColumns","supColItems","selectedXCol","selectedYCol","predInput","predOutput","setK","bind","setPred","setXColumn","setYColumn","getSupColumns","fillSupColumns","generateGraph","changeDispImage","sendKmeansInfo","getPred","e","setState","target","value","console","log","get","then","response","data","cols","menuItems","map","index","responseType","blob","Blob","type","headers","image","URL","createObjectURL","newImage","uploadXCol","post","X","catch","error","uploadYCol","Y","uploadK","K","uploadPred","pred","sendPredInfo","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\n\nconst API_ROUTE = \"http://localhost:5000\"\n\nclass KmeansService extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            disp_image: null,\n            kInput: null,\n            supColumns: null,\n            supColItems: null,\n            selectedXCol: null,\n            selectedYCol: null,\n            predInput: null,\n            predOutput: null\n        }\n        this.setK = this.setK.bind(this)\n        this.setPred = this.setPred.bind(this)\n        this.setXColumn = this.setXColumn.bind(this)\n        this.setYColumn = this.setYColumn.bind(this)\n        this.getSupColumns = this.getSupColumns.bind(this)\n        this.fillSupColumns = this.fillSupColumns.bind(this)\n        this.generateGraph = this.generateGraph.bind(this)\n        this.changeDispImage = this.changeDispImage.bind(this)\n        this.sendKmeansInfo = this.sendKmeansInfo.bind(this)\n        this.getPred = this.getPred.bind(this)\n\n    }\n\n    setK(e) {  \n        this.setState({\n            kInput: e.target.value\n        });  \n        console.log(this.state.kInput)  \n    }\n\n    setPred(e) {  \n        this.setState({\n            predInput: e.target.value\n        });  \n        console.log(this.state.predInput)  \n    }\n\n    setXColumn(e) {\n        console.log(e.target.value)\n        this.setState({\n            selectedXCol: e.target.value,\n        })\n    }\n\n    setYColumn(e) {\n        console.log(e.target.value)\n        this.setState({\n            selectedYCol: e.target.value,\n        })\n    }\n\n    getSupColumns() {\n        return axios.get(API_ROUTE + \"/supcolumns\")\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    supColumns: response.data\n                })\n            })\n    }\n\n    getPred() {\n        return axios.get(API_ROUTE + \"/pred\")\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    predOutput: response.data\n                })\n            })\n    }\n\n    fillSupColumns() {\n        let cols = this.state.supColumns;\n        let menuItems = cols.map((index, value) =>\n            <MenuItem value={value} key={index}>{index}</MenuItem>\n        );\n        this.setState({\n            supColItems: menuItems\n        })\n    }\n\n\n    generateGraph() {\n        return axios.get(API_ROUTE + \"/generateKmeansGraph\", { responseType: 'arraybuffer' })\n            .then(response => {\n                console.log(response)\n                var blob = new Blob(\n                    [response.data],\n                    { type: response.headers['content-type'] }\n                )\n\n                var image = URL.createObjectURL(blob)\n                console.log(image)\n\n                this.changeDispImage(image)\n                console.log(this.state.disp_image)\n                return image\n            });\n    }\n\n    changeDispImage(newImage) {\n        this.setState({\n            disp_image: newImage\n        });\n    }\n\n    uploadXCol(){\n        return axios.post(API_ROUTE + '/uploadXCol', {\n            data: {\n                X: this.state.selectedXCol\n            },\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    uploadYCol(){\n        return axios.post(API_ROUTE + '/uploadYCol', {\n            data: {\n                Y: this.state.selectedYCol\n            },\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    uploadK(){\n        return axios.post(API_ROUTE + '/uploadK', {\n            data: {\n                K: this.state.kInput\n            },\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    uploadPred(){\n        return axios.post(API_ROUTE + '/uploadPred', {\n            data: {\n                pred: this.state.predInput\n            },\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    async sendKmeansInfo() {\n        await this.uploadXCol()\n        await this.uploadYCol()\n        await this.uploadK()\n        await this.generateGraph()\n    } \n\n    sendPredInfo(){\n        this.uploadPred()\n    }\n\n\n\n    async componentDidMount() {\n        await this.getSupColumns()\n        await this.fillSupColumns()\n    }\n\n    render() {\n        return (\n            <div class=\"graph\">\n                <h4>\n                    Do unsupervised ML (Kmeans)!\n                </h4>\n                <InputLabel>X Column</InputLabel>\n                <Select\n                    onChange={this.setXColumn}>\n                    {this.state.supColItems}\n                </Select>\n                <InputLabel>Y Column</InputLabel>\n                <Select\n                    onChange={this.setYColumn}>\n                    {this.state.supColItems}\n                </Select>\n                <InputLabel>K: Number of clusters</InputLabel>\n                <TextField id=\"standard-basic\" value={this.state.kInput} onChange={this.setK} className=\"k\"/>\n\n                <div class=\"file-field input-field\">\n                    <Box display=\"flex\" alignSelf=\"flex-end\" justifyContent=\"center\" className=\"upl\">\n                        <a class=\"waves-effect waves-light btn\" onClick={this.sendKmeansInfo}>Do K-means</a>\n                    </Box>\n                    <Box display=\"flex\" justifyContent=\"center\">\n                        <img src={this.state.disp_image} onChange={this.changeDispImage} id=\"graph-upload\" className=\"ImageSize\" />\n                    </Box>\n                </div>\n                <h5>\n                    Which cluster are you in?\n                </h5>\n                <InputLabel>Input your own {this.state.selectedXCol} and {this.state.selectedYCol}:</InputLabel>\n                <TextField id=\"standard-basic\" value={this.state.predInput} onChange={this.setPred} className=\"k\"/>\n                <Box display=\"flex\" alignSelf=\"flex-end\" justifyContent=\"center\" className=\"upl\">\n                        <a class=\"waves-effect waves-light btn\" onClick={this.sendPredInfo}>Predict cluster</a>\n                    </Box>\n                <h6>\n                    You are in cluster: {this.state.predOutput}\n                </h6>\n            </div>\n        );\n    }\n\n\n\n\n}\n\n\nexport default KmeansService;"]},"metadata":{},"sourceType":"module"}