{"ast":null,"code":"var _jsxFileName = \"/Users/lassevad/Desktop/utveksling/Fag/finals/bigdata-service/frontend/src/Supervised.js\";\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ROUTE = \"http://localhost:5000\";\n\nclass GolferService extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.uploadCol = () => {\n      return axios.post(API_ROUTE + '/uploadSupCol', {\n        data: {\n          col: this.state.selectedSupCol\n        },\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      supColumns: null,\n      supColItems: null,\n      selectedSupCol: null,\n      binInput: null,\n      disp_image: null\n    };\n    this.getSupColumns = this.getSupColumns.bind(this);\n    this.setBin = this.setBin.bind(this);\n    this.setSupColumn = this.setSupColumn.bind(this);\n    this.uploadCol = this.uploadCol.bind(this);\n    this.uploadBins = this.uploadBins.bind(this);\n    this.changeDispImage = this.changeDispImage.bind(this);\n    this.generateGraph = this.generateGraph.bind(this);\n    this.fillSupColumns = this.fillSupColumns.bind(this);\n  }\n\n  setSupColumn(e) {\n    console.log(e.target);\n    this.setState({\n      selectedSupCol: e.target.value\n    });\n  }\n\n  setBin(e) {\n    this.setState({\n      binInput: e.target.value\n    });\n  }\n\n  getSupColumns() {\n    return axios.get(API_ROUTE + \"/supcolumns\").then(response => {\n      console.log(response.data);\n      this.setState({\n        supColumns: response.data\n      });\n    });\n  }\n\n  fillSupColumns() {\n    let cols = this.state.supColumns;\n    let menuItems = cols.map((index, value) => /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: value,\n      children: index\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this));\n    this.setState({\n      supColItems: menuItems\n    });\n  }\n\n  uploadBins() {\n    return axios.post(API_ROUTE + '/uploadSupBins', {\n      data: {\n        bins: this.state.binInput\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  changeDispImage(newImage) {\n    this.setState({\n      disp_image: newImage\n    });\n  }\n\n  generateGraph() {\n    return axios.get(API_ROUTE + \"/generateSupGraph\", {\n      responseType: 'arraybuffer'\n    }).then(response => {\n      console.log(response);\n      var blob = new Blob([response.data], {\n        type: response.headers['content-type']\n      });\n      var image = URL.createObjectURL(blob);\n      console.log(image);\n      this.changeDispImage(image);\n      console.log(this.state.disp_image);\n      return image;\n    });\n  }\n\n  async sendGraphInfo() {\n    await this.uploadCol().bind(this);\n    await this.uploadBins().bind(this);\n    this.generateGraph();\n  }\n\n  handleSubmit(event) {\n    alert('Bins was submitted: ' + this.state.binInput);\n    event.preventDefault();\n  }\n\n  async componentDidMount() {\n    await this.getSupColumns();\n    this.fillSupColumns();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"graph\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Do supervised ML on a golfer!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Attribute to predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        onChange: this.setCol,\n        children: this.state.supColItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Bins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"Standard\",\n        onSubmit: this.handleSubmit,\n        value: this.state.binInput,\n        onChange: this.setBin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"file-field input-field\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignSelf: \"flex-end\",\n          justifyContent: \"center\",\n          className: \"upl\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"waves-effect waves-light btn\",\n            onClick: this.sendGraphInfo,\n            children: \"Classify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.disp_image,\n            onChange: this.changeDispImage,\n            id: \"graph-upload\",\n            className: \"ImageSize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GolferService;","map":{"version":3,"sources":["/Users/lassevad/Desktop/utveksling/Fag/finals/bigdata-service/frontend/src/Supervised.js"],"names":["React","Select","InputLabel","MenuItem","Box","TextField","axios","API_ROUTE","GolferService","Component","constructor","props","uploadCol","post","data","col","state","selectedSupCol","headers","then","response","console","log","catch","error","supColumns","supColItems","binInput","disp_image","getSupColumns","bind","setBin","setSupColumn","uploadBins","changeDispImage","generateGraph","fillSupColumns","e","target","setState","value","get","cols","menuItems","map","index","bins","newImage","responseType","blob","Blob","type","image","URL","createObjectURL","sendGraphInfo","handleSubmit","event","alert","preventDefault","componentDidMount","render","setCol"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\n\nconst API_ROUTE = \"http://localhost:5000\"\n\nclass GolferService extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            supColumns: null,\n            supColItems: null,\n            selectedSupCol: null,\n            binInput: null,\n            disp_image: null\n        }\n        this.getSupColumns = this.getSupColumns.bind(this)\n        this.setBin = this.setBin.bind(this)\n        this.setSupColumn = this.setSupColumn.bind(this)\n        this.uploadCol = this.uploadCol.bind(this)\n        this.uploadBins = this.uploadBins.bind(this)\n        this.changeDispImage = this.changeDispImage.bind(this)\n        this.generateGraph = this.generateGraph.bind(this)\n        this.fillSupColumns = this.fillSupColumns.bind(this)\n    }\n\n    setSupColumn(e) {\n        console.log(e.target)\n        this.setState({\n            selectedSupCol: e.target.value\n        })\n    }\n\n    setBin(e) {    \n        this.setState({\n            binInput: e.target.value\n        });  \n    }\n\n    getSupColumns() {\n        return axios.get(API_ROUTE + \"/supcolumns\")\n            .then(response => {\n                console.log(response.data)\n                this.setState({\n                    supColumns: response.data\n                })\n            })\n    }\n\n    fillSupColumns() {\n        let cols = this.state.supColumns;\n        let menuItems = cols.map((index, value) =>\n            <MenuItem value={value} key={index}>{index}</MenuItem>\n        );\n        this.setState({\n            supColItems: menuItems\n        })\n    }\n\n    uploadCol = () => {\n        return axios.post(API_ROUTE + '/uploadSupCol', {\n            data: {\n                col: this.state.selectedSupCol\n            },\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    uploadBins() {\n        return axios.post(API_ROUTE + '/uploadSupBins', {\n            data: {\n                bins: this.state.binInput\n            },\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    changeDispImage(newImage) {\n        this.setState({\n            disp_image: newImage\n        });\n    }\n\n    generateGraph() {\n        return axios.get(API_ROUTE + \"/generateSupGraph\", { responseType: 'arraybuffer' })\n            .then(response => {\n                console.log(response)\n                var blob = new Blob(\n                    [response.data],\n                    { type: response.headers['content-type'] }\n                )\n\n                var image = URL.createObjectURL(blob)\n                console.log(image)\n\n                this.changeDispImage(image)\n                console.log(this.state.disp_image)\n                return image\n            });\n    }\n\n    async sendGraphInfo() {\n        await this.uploadCol().bind(this)\n        await this.uploadBins().bind(this)\n        this.generateGraph()\n    }\n\n    handleSubmit(event) {\n        alert('Bins was submitted: ' + this.state.binInput);\n        event.preventDefault();\n      }\n\n    async componentDidMount() {\n        await this.getSupColumns()\n        this.fillSupColumns()\n    }\n\n    render() {\n        return (\n            <div class=\"graph\">\n                <h4>\n                    Do supervised ML on a golfer!\n                </h4>\n                <InputLabel>Attribute to predict</InputLabel>\n                <Select\n                    onChange={this.setCol}>\n                    {this.state.supColItems}\n                </Select>\n                <InputLabel>Bins</InputLabel>\n                <TextField id=\"standard-basic\" label=\"Standard\" onSubmit={this.handleSubmit} value={this.state.binInput} onChange={this.setBin}/>\n\n                <div class=\"file-field input-field\">\n                    <Box display=\"flex\" alignSelf=\"flex-end\" justifyContent=\"center\" className=\"upl\">\n                        <a class=\"waves-effect waves-light btn\" onClick={this.sendGraphInfo}>Classify</a>\n                    </Box>\n                    <Box display=\"flex\" justifyContent=\"center\">\n                        <img src={this.state.disp_image} onChange={this.changeDispImage} id=\"graph-upload\" className=\"ImageSize\" />\n                    </Box>\n                </div>\n            </div>\n        );\n    }\n\n\n\n\n}\n\n\nexport default GolferService;"]},"metadata":{},"sourceType":"module"}